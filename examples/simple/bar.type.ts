/**
 * Generated by @zefiros-software/therefore@v0.0.1
 * Do not manually touch this
 */

/* eslint-disable */

import { Foo } from './foo.type'

import type { ValidateFunction } from 'ajv'

import AjvValidator from 'ajv'

export interface Bar {
    foo: Foo
}

export const Bar = {
    validate: require('./schemas/bar.schema.js') as ValidateFunction<Bar>,
    get schema() {
        return Bar.validate.schema
    },
    source: `${__dirname}bar.schema`,
    sourceSymbol: 'bar',
    is: (o: unknown): o is Bar => Bar.validate(o) === true,
    assert: (o: unknown): asserts o is Bar => {
        if (!Bar.validate(o)) {
            throw new AjvValidator.ValidationError(Bar.validate.errors ?? [])
        }
    },
} as const
