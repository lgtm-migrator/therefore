/**
 * Generated by @zefiros-software/therefore@v0.0.1
 * Do not manually touch this
 */

/* eslint-disable */

import type { ValidateFunction } from 'ajv'

import AjvValidator from 'ajv'

export interface Foo {
    foo: Local0
}

export const Foo = {
    validate: require('./schemas/foo.schema.js') as ValidateFunction<Foo>,
    get schema() {
        return Foo.validate.schema
    },
    source: `${__dirname}foo.schema`,
    sourceSymbol: 'foo',
    is: (o: unknown): o is Foo => Foo.validate(o) === true,
    assert: (o: unknown): asserts o is Foo => {
        if (!Foo.validate(o)) {
            throw new AjvValidator.ValidationError(Foo.validate.errors ?? [])
        }
    },
} as const

interface Local0 {
    x: number
}
