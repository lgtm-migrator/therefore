/**
 * Generated by @zefiros/therefore@v0.0.1
 * Do not manually touch this
 */

/* eslint-disable */
import commandSchema from './schemas/command.schema.json'

import AjvValidator from 'ajv'

export interface Command {
    description: string
    suggested_key: {
        [k: string]: string | undefined
    }
}

export const Command = {
    schema: commandSchema,
    validate:
        typeof commandSchema === 'function'
            ? commandSchema
            : (new AjvValidator().compile(commandSchema) as {
                  (o: unknown | Command): o is Command
                  errors?: null | Array<import('ajv').ErrorObject>
              }),
    is: (o: unknown | Command): o is Command => Command.validate(o) === true,
    assert: (o: unknown | Command): asserts o is Command => {
        if (!Command.validate(o)) {
            throw new AjvValidator.ValidationError(Command.validate.errors ?? [])
        }
    },
}
